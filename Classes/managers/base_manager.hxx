/** Copyright (c) 2018 Mozart Alexander Louis. All rights reserved. */

#ifndef __BASE_MANAGER_HXX__
#define __BASE_MANAGER_HXX__

/**
 * Includes
 */
#include "globals.hxx"
#include "utils/action/action_utils.hxx"

class BaseManager {
 protected:
  /**
   * Constructor.
   *
   * @param layer ~ Reference to the main layer.
   */
  explicit BaseManager(Layer& layer);

  /**
   * Destructor.
   */
  virtual ~BaseManager();

  /**
   * Searches through the node map to find a pair that matches name.
   *
   * @param name ~ The name of the node as a key.
   *
   * @returns node ~ if found, otherwise an empty iterator.
   */
  Node* findNode(const string& name);

  /**
   * Runs all actions found in the initializer list
   *
   * @param node  ~ The node to run the actions on
   * @param props ~ The value map containing the action map
   */
  static void addActionFromProps(Node* node, ValueMap props);

  // Map holding node object by name variables generated by the managers.
  Map<string, Node*> node_map_;

  // A reference to the main layer to auto play object on it
  Layer& main_layer_;

 private:
  __DISALLOW_COPY_AND_ASSIGN__(BaseManager)
};

#endif  // __BASE_MANAGER_HXX__
